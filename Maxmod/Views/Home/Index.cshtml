@inject ISettingsService _settingsService
@inject IVendorService _vendorService
@{
    ViewData["Title"] = "Home";
    var settings = await _settingsService.GetSettingsAsync();
}

@section Styles {
    <link rel="stylesheet" href="~/client/assets/css/index.min.css" />
}
<!-- Intro Section -->
<section class="introduction-section">
    <img src="~/client/assets/images/misc/@settings.IntroImage"
         alt=""
         class="intro-img" />
    <div class="container">
        <h1 class="intro-title">
            @settings.IntroTitle
        </h1>
        <p class="intro-text">
            @settings.IntroDescription
        </p>
        <a asp-action="index" asp-controller="product" class="btn">Shop Now</a>
    </div>
</section>
<!-- Shop by category section -->
@await Component.InvokeAsync("CategorySlider")
<!-- Weeks highligths section -->
@await Component.InvokeAsync("ProductSlider")
<!-- Scrolling text section -->
<section class="scrolling-text-section">
    <div class="scroll">
        <div class="right-to-left">
            <!-- 10 -->
            @for (int i = 0; i < 10; i++)
            {
                <p>@settings.MarqueeText1</p>
                <p>@settings.MarqueeText2</p>
            }
        </div>
    </div>
</section>
<!-- Promo section -->
<section class="promo-section">
    <div class="container">
        <img src="~/client/assets/images/misc/@settings.PromoImage" alt="" />
        <div class="text-container">
            <h2>@Html.Raw(settings.PromoTitle)</h2>
            <p>@settings.PromoDescription</p>
        </div>
    </div>
</section>
<!-- Small promos section -->
<section class="small-promos-section">
    <div class="container">
        <div class="wrapper">
            <img src="~/client/assets/images/misc/@settings.SmallPromoImage1" alt="" />
            <h5>@settings.SmallPromoHeading1</h5>
            <h4>@settings.SmallPromoTitle1</h4>
            <p>@settings.SmallPromoText1</p>
            <a asp-action="index" asp-controller="product">Shop now</a>
        </div>
        <div class="wrapper">
            <img src="~/client/assets/images/misc/@settings.SmallPromoImage2" alt="" />
            <h5>@settings.SmallPromoHeading2</h5>
            <h4>@settings.SmallPromoTitle2</h4>
            <p>@settings.SmallPromoText2</p>
            <a asp-action="index" asp-controller="product">Shop now</a>
        </div>
        <div class="wrapper">
            <img src="~/client/assets/images/misc/@settings.SmallPromoImage3" alt="" />
            <h5>@settings.SmallPromoHeading3</h5>
            <h4>@settings.SmallPromoTitle3</h4>
            <p>@settings.SmallPromoText3</p>
            <a asp-action="index" asp-controller="product">Shop now</a>
        </div>
    </div>
</section>
<!-- Delivery info section -->
<section class="delivery-info-section">
    <div class="container">
        <div class="wrapper">
            <div class="img-wrapper">
                <img src="~/client/assets/icons/shiping_icon.svg" alt="" />
            </div>
            <div class="text-wrapper">
                <h3>Free Shipping</h3>
                <p>Shipping Is A Great Way Spend More.</p>
            </div>
        </div>
        <div class="wrapper">
            <div class="img-wrapper">
                <img src="~/client/assets/icons/money_guarantee_icon.svg"
                     alt="" />
            </div>
            <div class="text-wrapper">
                <h3>Money Guarantee</h3>
                <p>Financial Guarantee Is An Agreement.</p>
            </div>
        </div>
        <div class="wrapper">
            <div class="img-wrapper">
                <img src="~/client/assets/icons/flexible_payment_icon.svg"
                     alt="" />
            </div>
            <div class="text-wrapper">
                <h3>Flexible Payment</h3>
                <p>Allows Consumers To Purchase A Product</p>
            </div>
        </div>
        <div class="wrapper">
            <div class="img-wrapper">
                <img src="~/client/assets/icons/support_icon.svg" alt="" />
            </div>
            <div class="text-wrapper">
                <h3>24/7 Support</h3>
                <p>Customer Service Support</p>
            </div>
        </div>
    </div>
</section>
<!-- Big promo section -->
<section class="big-promo-section">
    <div class="container">
        <img src="~/client/assets/images/misc/@settings.BigPromoImage" alt="" />
        <h3>@settings.BigPromoHeading</h3>
        <h2>@settings.BigPromoTitle</h2>
        <p>@settings.BigPromoText</p>
        <a asp-action="index" asp-controller="product" class="btn">Shop Now</a>
    </div>
</section>
<!-- Vendor section -->
@await Component.InvokeAsync("Vendor")

@section Scripts {
    <script src="~/client/assets/js/index.min.js"></script>

    <script>
        const productss = document.querySelectorAll(".weeks-highligths-section .slide");
        productss.forEach(product => {
            //Change variant

            const priceWrapper = product.querySelector(".price-wrapper");
            const labels = product.querySelectorAll("label");
            const badges = product.querySelector(".badges")
            labels.forEach(label => {
                if (label.classList.contains("out")) return;
                label.addEventListener("click", () => {
                    if (label.dataset.discountPrice != 0) {
                        priceWrapper.innerHTML = `<span class="selling-price">$${label.dataset.discountPrice} </span><span class="old-price" > $${label.dataset.price}</span>`;
                        badges.innerHTML = `<div class="new-badge"></div><div class="save-badge" data-dollar="${(label.dataset.price - label.dataset.discountPrice).toFixed(2)}"></div>`
                    } else {
                        priceWrapper.innerHTML = `<span class="selling-price">$${label.dataset.price} </span>`;
                        badges.innerHTML = `<div class="new-badge"></div>`
                    }
                })
            })

            //Add to cart
            const inputGroup = product.querySelectorAll('input');
            const addToCartBtn = product.querySelector(".product-add-to-cart");

            let selectedInputValue = 0;
            if (!product.querySelector("input").disabled)
                selectedInputValue = product.querySelector('input:checked').value;

            inputGroup.forEach(input => input.addEventListener("change", () => {
                if (!product.querySelector("input").disabled)
                    selectedInputValue = product.querySelector('input:checked').value;
            }));

            addToCartBtn.addEventListener("click", async () => {
                if (selectedInputValue != 0) {
                    await fetch(`@Url.Action("AddToCart", "Cart")/?id=${selectedInputValue}&quantity=1`, { method: "POST" })
                    await refreshLayoutCart();
                }
            });
        });
    </script>
}