@{
    ViewData["Title"] = "Shop";

    PagerVM? pager = new PagerVM();
    List<Category>? categories = new List<Category>();
    List<Weight>? weights = new List<Weight>();
    var category = ViewBag.Category as string;
    var orderBy = ViewBag.OrderBy as string;
    var orderByDesc = ViewBag.OrderByDesc as string;
    var searchString = ViewBag.SerachString as string;
    if (ViewBag.Pager != null)
    {
        pager = ViewBag.Pager as PagerVM;
    }
    if (ViewBag.Categories != null)
    {
        categories = ViewBag.Categories as List<Category>;
    }
    if (ViewBag.Weights != null)
    {
        weights = ViewBag.Weights as List<Weight>;
    }
}
@model List<Product>

@section Styles {
    <link rel="stylesheet" href="~/client/assets/css/shop.css" />
}

<div class="container">
    <div class="breadcrumbs">
        <span><a asp-action="index" asp-controller="home">Home </a>>&nbsp;</span><span> @(category ?? "All Products")</span>
    </div>
    <!-- Shop Start -->
    <section class="shop-section">
        <div class="filters">
            <button class="close-filter">X</button>
            <div class="filter-categories">
                <button class="filter-categories-btn">
                    Categories
                    <img src="~/client/assets/icons/chevron.svg" alt="" />
                </button>
                <ul class="filter-categories-ul hidden">
                    @if (categories != null)
                    {
                        @foreach (var cat in categories)
                        {
                            @if (cat.Parent == null)
                            {
                                @if (cat.SubCategories!.Count == 0)
                                {
                                    <li>
                                        <a asp-action="index" asp-controller="product" asp-route-category="@cat.Name" class="category-btn">
                                            @cat.Name
                                        </a>
                                    </li>
                                }
                                else
                                {
                                    <li>
                                        <a onclick="event.preventDefault()" href="#" class="category-btn">
                                            @cat.Name
                                            <img src="~/client/assets/icons/chevron.svg" alt="" />
                                        </a>
                                        <ul class="filter-subcategories-ul hidden">
                                            @foreach (var subcategory in cat.SubCategories)
                                            {
                                                <li>
                                                    <a asp-action="index" asp-controller="product" asp-route-category="@subcategory.Name" class="subcategory">
                                                        @subcategory.Name
                                                    </a>
                                                </li>
                                            }
                                        </ul>
                                    </li>
                                }
                            }
                        }
                    }
                </ul>
            </div>
            <div class="filter-container">
                <h3>Filter:</h3>
                <div class="filter-wrapper">
                    <button class="filter-btn">
                        Availability
                        <img src="~/client/assets/icons/chevron.svg" alt="" />
                    </button>
                    <div class="line"></div>
                    <ul class="filter-ul open">
                        <li>
                            <label for="filter-instock">
                                <input type="checkbox" id="filter-instock" />
                                <span>In stock</span>
                            </label>
                        </li>
                        <li>
                            <label for="filter-outofstock">
                                <input type="checkbox" id="filter-outofstock" />
                                <span>Out of stock</span>
                            </label>
                        </li>
                    </ul>
                </div>
                <div class="filter-wrapper">
                    <button class="filter-btn">
                        Weight
                        <img src="~/client/assets/icons/chevron.svg" alt="" />
                    </button>
                    <div class="line"></div>
                    <ul class="filter-ul open">
                        @if (weights != null)
                        {
                            @foreach (var weight in weights)
                            {
                                <li>
                                    <label for="filter-@weight.Name">
                                        <input type="checkbox" id="filter-@weight.Name" value="@weight.Id" />
                                        <span>@weight.Name</span>
                                    </label>
                                </li>
                            }
                        }
                    </ul>
                </div>
            </div>
        </div>
        <div class="overlay"></div>
        <div class="products">
            <div class="page-top">
                <label for="sort-select">Sort by:</label>
                <select name="sort" id="sort-select">
                    @if (orderByDesc == "CreatedAt")
                    {
                        <option value="newest" selected>Date, newest</option>
                    }
                    else
                    {
                        <option value="newest">Date, newest</option>
                    }
                    @if (orderBy == "CreatedAt")
                    {
                        <option value="oldest" selected>Date, oldest</option>
                    }
                    else
                    {
                        <option value="oldest">Date, oldest</option>
                    }
                    @if (orderBy == "Price")
                    {
                        <option value="lowest-price" selected>Price, lowest</option>
                    }
                    else
                    {
                        <option value="lowest-price">Price, lowest</option>
                    }
                    @if (orderByDesc == "Price")
                    {
                        <option value="highest-price" selected>Price, highest</option>
                    }
                    else
                    {
                        <option value="highest-price">Price, highest</option>
                    }
                </select>
                <button class="filter-sort">
                    <img src="~/client/assets/icons/filter_sort_icon.svg" alt="" />
                    Filter and Sort
                </button>
            </div>
            <div class="line"></div>
            <div class="products-container">
                @foreach (var product in Model)
                {
                    <div class="product">
                        <div class="top">
                            <div class="badges">
                                @if (product.IsNew)
                                {
                                    <div class="new-badge"></div>
                                }
                                @if (!product.ProductWeights.Any(x => x.Stock > 0))
                                {
                                    <div class="out-of-stock-badge"></div>
                                }
                                @if (product.ProductWeights.FirstOrDefault(x => x.Stock > 0) != null && product.ProductWeights.FirstOrDefault(x => x.Stock > 0)?.DiscountPrice != 0)
                                {
                                    <div class="save-badge" data-dollar="@(product.ProductWeights.FirstOrDefault(x => x.Stock > 0 && x.DiscountPrice != 0)?.Price
                                            - product.ProductWeights.FirstOrDefault(x => x.Stock > 0 && x.DiscountPrice != 0)?.DiscountPrice)"></div>
                                }
                            </div>
                            @if (product.ProductWeights.Any(x => x.Stock > 0))
                            {
                                <a asp-action="detail" asp-controller="product" asp-route-id="@product.Id">
                                    <img src="~/client/assets/images/product/@product.ProductImages.FirstOrDefault(x=>x.IsMain).Url"
                                         alt=""
                                         class="main-img" />
                                    <img src="~/client/assets/images/product/@product.ProductImages.FirstOrDefault(x=>x.IsHover).Url"
                                         alt=""
                                         class="hover-img" />
                                </a>
                            }
                            else
                            {
                                <a href="#" onclick="event.preventDefault()">
                                    <img src="~/client/assets/images/product/@product.ProductImages.FirstOrDefault(x=>x.IsMain).Url"
                                         alt=""
                                         class="main-img" />
                                    <img src="~/client/assets/images/product/@product.ProductImages.FirstOrDefault(x=>x.IsHover).Url"
                                         alt=""
                                         class="hover-img" />
                                </a>
                            }
                            <div class="actions">
                                @if (product.ProductWeights.Any(x => x.Stock > 0))
                                {
                                    <a asp-action="detail" asp-controller="product" asp-route-id="@product.Id" class="btn">Detailed Look</a>
                                }
                                else
                                {
                                    <a href="#" onclick="event.preventDefault()" class="btn">Detailed Look</a>
                                }
                                <button class="btn product-add-to-cart">Add To Cart</button>
                            </div>
                        </div>
                        <div class="bottom">
                            <h6>@product.Vendor.Name</h6>
                            @if (product.ProductWeights.Any(x => x.Stock > 0))
                            {
                                <a asp-action="detail" asp-controller="product" asp-route-id="@product.Id">@product.Name</a>
                            }
                            else
                            {
                                <a href="#" onclick="event.preventDefault()">@product.Name</a>
                            }
                            @if (product.ProductWeights.FirstOrDefault(x => x.Stock > 0) != null && product.ProductWeights.FirstOrDefault(x => x.Stock > 0)?.DiscountPrice != 0)
                            {
                                <div class="price-wrapper">
                                    <span class="selling-price">$@product.ProductWeights.FirstOrDefault(x => x.Stock > 0)?.DiscountPrice</span>
                                    <span class="old-price">$@product.ProductWeights.FirstOrDefault(x => x.Stock > 0)?.Price</span>
                                </div>
                            }
                            else if (product.ProductWeights.FirstOrDefault(x => x.Stock > 0) != null && product.ProductWeights.FirstOrDefault(x => x.Stock > 0)?.DiscountPrice == 0)
                            {
                                <div class="price-wrapper">
                                    <span class="selling-price">$@product.ProductWeights.FirstOrDefault(x => x.Stock > 0)?.Price</span>
                                </div>
                            }
                            @if (!product.ProductWeights.Any(x => x.Weight.Name == "Default"))
                            {
                                <div class="line"></div>
                                <h5>Weight</h5>
                                <div class="variations">
                                    @foreach (var productWeight in product.ProductWeights)
                                    {
                                        if (productWeight.Stock == 0)
                                        {
                                            <label data-stock="@productWeight.Stock"
                                                   data-price="@productWeight.Price"
                                                   data-discount-price="@productWeight.DiscountPrice"
                                                   data-new="@product.IsNew"
                                                   for="variation-@productWeight.Id"
                                                   class="variation out">
                                                @productWeight.Weight.Name
                                            </label>
                                            <input style="display: none"
                                                   type="radio"
                                                   id="variation-@productWeight.Id"
                                                   value="@productWeight.Id"
                                                   name="variation-@product.Id"
                                                   disabled />
                                        }
                                        else if (productWeight == @product.ProductWeights.FirstOrDefault(x => x.Stock > 0))
                                        {
                                            <label data-stock="@productWeight.Stock"
                                                   data-price="@productWeight.Price"
                                                   data-discount-price="@productWeight.DiscountPrice"
                                                   data-new="@product.IsNew"
                                                   for="variation-@productWeight.Id"
                                                   class="variation active">
                                                @productWeight.Weight.Name
                                            </label>
                                            <input checked="checked"
                                                   style="display: none"
                                                   type="radio"
                                                   id="variation-@productWeight.Id"
                                                   value="@productWeight.Id"
                                                   name="variation-@product.Id" />
                                        }
                                        else
                                        {
                                            <label data-stock="@productWeight.Stock"
                                                   data-price="@productWeight.Price"
                                                   data-discount-price="@productWeight.DiscountPrice"
                                                   data-new="@product.IsNew"
                                                   for="variation-@productWeight.Id"
                                                   class="variation">
                                                @productWeight.Weight.Name
                                            </label>
                                            <input style="display: none"
                                                   type="radio"
                                                   id="variation-@productWeight.Id"
                                                   value="@productWeight.Id"
                                                   name="variation-@product.Id" />
                                        }
                                    }
                                </div>
                            }
                            else
                            {
                                if (product.ProductWeights.First().Stock > 0)
                                {
                                    <label style="display:none"
                                           data-stock="@product.ProductWeights.First().Stock"
                                           data-price="@product.ProductWeights.First().Price"
                                           data-discount-price="@product.ProductWeights.First().DiscountPrice"
                                           data-new="@product.IsNew"
                                           for="variation-@product.ProductWeights.First().Id"
                                           class="variation">
                                        @product.ProductWeights.First().Weight.Name
                                    </label>
                                    <input data-new="@product.IsNew"
                                           style="display: none"
                                           checked="checked"
                                           type="radio"
                                           id="variation-@product.ProductWeights.First().Id"
                                           value="@product.ProductWeights.First().Id"
                                           name="variation-@product.ProductWeights.First().Id" />
                                }
                                else
                                {
                                    <label style="display:none"
                                           data-stock="@product.ProductWeights.First().Stock"
                                           data-price="@product.ProductWeights.First().Price"
                                           data-discount-price="@product.ProductWeights.First().DiscountPrice"
                                           data-new="@product.IsNew"
                                           for="variation-@product.ProductWeights.First().Id"
                                           class="variation">
                                        @product.ProductWeights.First().Weight.Name
                                    </label>
                                    <input data-new="@product.IsNew"
                                           style="display: none"
                                           type="radio"
                                           id="variation-@product.ProductWeights.First().Id"
                                           value="@product.ProductWeights.First().Id"
                                           name="variation-@product.ProductWeights.First().Id"
                                           disabled />
                                }
                            }
                        </div>
                    </div>
                }
            </div>
            <div class="pagination">
                @if (pager?.TotalPages > 0)
                {
                    @if (pager.CurrentPage > 1)
                    {
                        @if (pager.CurrentPage != 2)
                        {
                            <a asp-action="index" asp-controller="product" asp-route-page="1" asp-route-category="@category" asp-route-orderBy="@orderBy" asp-route-orderByDesc="@orderByDesc" asp-route-searchString="@searchString" class="pagination-prev">@("<<")</a>
                        }
                        <a asp-action="index" asp-controller="product" asp-route-page="@(pager.CurrentPage - 1)" asp-route-category="@category" asp-route-orderBy="@orderBy" asp-route-orderByDesc="@orderByDesc" asp-route-searchString="@searchString" class="pagination-prev">@("<")</a>
                    }
                    <ul class="pagination-btns">
                        @for (int i = pager.StartPage; i <= pager.EndPage; i++)
                        {
                            <li>
                                <a asp-action="index" asp-controller="product" asp-route-page="@i" asp-route-category="@category" asp-route-orderBy="@orderBy" asp-route-orderByDesc="@orderByDesc" asp-route-searchString="@searchString" class="pagination-btn @(i == pager.CurrentPage ? "active" : "")">@i</a>
                            </li>
                        }
                    </ul>
                    @if (pager.CurrentPage < pager.TotalPages)
                    {
                        <a asp-action="index" asp-controller="product" asp-route-page="@(pager.CurrentPage + 1)" asp-route-category="@category" asp-route-orderBy="@orderBy" asp-route-orderByDesc="@orderByDesc" asp-route-searchString="@searchString" class="pagination-next">@(">")</a>
                        @if (pager.CurrentPage != pager.TotalPages - 1)
                        {
                            <a asp-action="index" asp-controller="product" asp-route-page="@(pager.TotalPages)" asp-route-category="@category" asp-route-orderBy="@orderBy" asp-route-orderByDesc="@orderByDesc" asp-route-searchString="@searchString" class="pagination-next">@(">>")</a>
                        }
                    }
                }
            </div>
        </div>
    </section>
</div>

@section Scripts {
    <script src="~/client/assets/js/shop.js"></script>

    <script>
        const productsss = document.querySelectorAll("main .product");

        productsss.forEach((product) => {
            // Change variation

            const variants = product.querySelectorAll(".variations label");
            const priceWrapper = product.querySelector(".price-wrapper");
            const badges = product.querySelector(".badges")

            variants.forEach((variant) => {
                variant.addEventListener("click", () => {
                    if (variant.classList.contains("out")) return;

                    const activeVariants = product.querySelectorAll(
                        ".variations label.active"
                    );
                    activeVariants.forEach((label) => {
                        label.classList.remove("active");
                    });

                    variant.classList.add("active");

                    if (variant.dataset.discountPrice != 0) {
                        priceWrapper.innerHTML = `<span class="selling-price">$${variant.dataset.discountPrice} </span><span class="old-price" > $${variant.dataset.price}</span>`;
                        badges.innerHTML = `${variant.dataset.new ? '<div class="new-badge"></div>' : ''}<div class="save-badge" data-dollar="${(variant.dataset.price - variant.dataset.discountPrice).toFixed(2)}" > </div>`
                    } else {
                        priceWrapper.innerHTML = `<span class="selling-price">$${variant.dataset.price} </span>`;
                        badges.innerHTML = `${variant.dataset.new ? '<div class="new-badge"></div>' : ''}`
                    }
                });
            });

            //Add to cart
            const inputGroup = product.querySelectorAll('input');
            const addToCartBtn = product.querySelector(".product-add-to-cart");

            let selectedInputValue = 0;
            inputGroup.forEach(input => {
                if (!input.disabled && selectedInputValue === 0)
                    selectedInputValue = input.value;
            });

            inputGroup.forEach(input => input.addEventListener("change", () => {
                if (!input.disabled && input.checked)
                    selectedInputValue = input.value;
            }));

            addToCartBtn.addEventListener("click", async () => {
                if (selectedInputValue != 0) {
                    await fetch(`@Url.Action("AddToCart", "Cart")/?id=${selectedInputValue}&quantity=1`, { method: "POST" })
                    await refreshLayoutCart();
                }
            });
        });

        // Sort by order
        document.addEventListener("DOMContentLoaded", () => {
            const sortSelectEl = document.getElementById("sort-select");

            sortSelectEl.addEventListener("change", () => {
                const selectedSort = sortSelectEl.value;
                const urlParams = new URLSearchParams(window.location.search);

                switch (selectedSort) {
                    case "oldest":
                        urlParams.set("orderBy", "CreatedAt");
                        urlParams.delete("orderByDesc");
                        break;
                    case "newest":
                        urlParams.set("orderByDesc", "CreatedAt");
                        urlParams.delete("orderBy");
                        break;
                    case "lowest-price":
                        urlParams.set("orderBy", "Price");
                        urlParams.delete("orderByDesc");
                        break;
                    case "highest-price":
                        urlParams.set("orderByDesc", "Price");
                        urlParams.delete("orderBy");
                        break;
                    default:
                        break;
                }

                window.location.search = urlParams.toString();
            });
        });
    </script>
}